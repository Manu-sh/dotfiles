" vimrc custom include module


" YCM
Plugin 'Valloric/YouCompleteMe'
Plugin 'rdnetto/YCM-Generator'


" let g:ycm_confirm_extra_conf = 0
let g:ycm_global_ycm_extra_conf = "$HOME/.vim/ycm_extra_conf/.ycm_extra_conf.py"

" load without asking
let g:ycm_confirm_extra_conf = 0

let g:ycm_python_binary_path = '/usr/bin/python3'
let g:ycm_server_python_interpreter = '/usr/bin/python3'
let g:ycm_path_to_python_interpreter = '/usr/bin/python3'
let g:ycm_min_num_of_chars_for_completion = 2
let g:ycm_seed_identifiers_with_syntax=1

let g:ycm_cache_omnifunc = 1
let g:ycm_collect_identifiers_from_tags_files = 1

" use libclang instead of clangd
let g:ycm_use_clangd = 0


" popup: https://github.com/ycm-core/YouCompleteMe/issues/3667
set updatetime=1000 " set CursorHold timeout
let g:ycm_auto_hover = 'CursorHold'

" let g:ycm_hover = {'command': 'GetDoc', 'syntax': &filetype }
" let g:ycm_hover = {'command': 'GetDoc', 'syntax': &syntax }
" questo Ã¨ in ~/.vim/after/syntax/vim.c

nmap + <plug>(YCMHover)



set completeopt-=preview
" let g:ycm_add_preview_to_completeopt = 0
" let g:ycm_autoclose_preview_window_after_insertion  = "preview"
" let g:ycm_autoclose_preview_window_after_completion = 1

" 0 to disable errors suggests
let g:ycm_show_diagnostics_ui = 1
let g:ycm_echo_current_diagnostic = 1

let g:ycm_auto_trigger = 1
" let g:ycm_key_invoke_completion = "<TAB>"

let g:ycm_semantic_triggers =  {
  \   'c' : ['->', '.'],
  \   'objc' : ['->', '.', 're!\[[_a-zA-Z]+\w*\s', 're!^\s*[^\W\d]\w*\s',
  \             're!\[.*\]\s'],
  \   'ocaml' : ['.', '#'],
  \   'cpp,cuda,objcpp' : ['->', '.', '::'],
  \   'perl' : ['->'],
  \   'php' : ['->', '::'],
  \   'cs,java,javascript,typescript,d,python,perl6,scala,vb,elixir,go' : ['.'],
  \   'ruby' : ['.', '::'],
  \   'lua' : ['.', ':'],
  \   'erlang' : [':'],
  \ }

let g:ycm_filetype_blacklist = { 'java' : 1, 'txt' : 1, '' : 1 }

" let &t_SI = "\e[6 q"
" let &t_EI = "\e[2 q"

" optional reset cursor on start:
" augroup myCmds
"	au!
"	autocmd VimEnter * silent !echo -ne "\e[2 q"
" augroup END
